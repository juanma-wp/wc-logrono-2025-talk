(()=>{"use strict";const e=window.wp.hooks,a=window.wp.blocks,i=window.wp.data,t=window.wp.i18n,n=window.wp.blockEditor,o=window.wp.element,r=window.wp.components,s=[{name:"Charles Bukowski",author_id:"Charles+Bukowski",link:"https://en.wikipedia.org/wiki/Charles_Bukowski"},{name:"Marcus Aurelius",author_id:"Marcus+Aurelius",link:"https://en.wikipedia.org/wiki/Marcus_Aurelius"},{name:"English proverb",author_id:"English+proverb",link:"https://en.wikipedia.org/wiki/Proverb"},{name:"Winston Churchill",author_id:"Winston+Churchill",link:"https://en.wikipedia.org/wiki/Winston_Churchill"},{name:"Abraham Lincoln",author_id:"Abraham+Lincoln",link:"https://en.wikipedia.org/wiki/Abraham_Lincoln"},{name:"Richard Bach",author_id:"Richard+Bach",link:"https://en.wikipedia.org/wiki/Richard_Bach"},{name:"Napoleon Hill",author_id:"Napoleon+Hill",link:"https://en.wikipedia.org/wiki/Napoleon_Hill"},{name:"Thomas Edison",author_id:"Thomas+Edison",link:"https://en.wikipedia.org/wiki/Thomas_Edison"},{name:"Dalai Lama",author_id:"Dalai+Lama",link:"https://en.wikipedia.org/wiki/Dalai_Lama"},{name:"Wayne Dyer",author_id:"Wayne+Dyer",link:"https://en.wikipedia.org/wiki/Wayne_Dyer"},{name:"Epictetus",author_id:"Epictetus",link:"https://en.wikipedia.org/wiki/Epictetus"},{name:"Johann Wolfgang von Goethe",author_id:"Johann+Wolfgang+von+Goethe",link:"https://en.wikipedia.org/wiki/Johann_Wolfgang_von_Goethe"},{name:"Alan Watts",author_id:"Alan+Watts",link:"https://en.wikipedia.org/wiki/Alan_Watts"},{name:"Aristotle",author_id:"Aristotle",link:"https://en.wikipedia.org/wiki/Aristotle"},{name:"Tony Robbins",author_id:"Tony+Robbins",link:"https://en.wikipedia.org/wiki/Tony_Robbins"},{name:"Henry David Thoreau",author_id:"Henry+David+Thoreau",link:"https://en.wikipedia.org/wiki/Henry_David_Thoreau"},{name:"Benjamin Franklin",author_id:"Benjamin+Franklin",link:"https://en.wikipedia.org/wiki/Benjamin_Franklin"},{name:"Bruce Lee",author_id:"Bruce+Lee",link:"https://en.wikipedia.org/wiki/Bruce_Lee"},{name:"Kahlil Gibran",author_id:"Kahlil+Gibran",link:"https://en.wikipedia.org/wiki/Kahlil_Gibran"},{name:"William Shakespeare",author_id:"William+Shakespeare",link:"https://en.wikipedia.org/wiki/William_Shakespeare"},{name:"Woody Allen",author_id:"Woody+Allen",link:"https://en.wikipedia.org/wiki/Woody_Allen"},{name:"Eleanor Roosevelt",author_id:"Eleanor+Roosevelt",link:"https://en.wikipedia.org/wiki/Eleanor_Roosevelt"},{name:"Carl Jung",author_id:"Carl+Jung",link:"https://en.wikipedia.org/wiki/Carl_Jung"},{name:"Mark Twain",author_id:"Mark+Twain",link:"https://en.wikipedia.org/wiki/Mark_Twain"},{name:"Elbert Hubbard",author_id:"Elbert+Hubbard",link:"https://en.wikipedia.org/wiki/Elbert_Hubbard"},{name:"Mahatma Gandhi",author_id:"Mahatma+Gandhi",link:"https://en.wikipedia.org/wiki/Mahatma_Gandhi"}],d=[{name:"Famous Quotes",tag_id:"famous-quotes"},{name:"Wisdom",tag_id:"wisdom"},{name:"Friendship",tag_id:"friendship"},{name:"Inspirational",tag_id:"inspirational"},{name:"Success",tag_id:"success"},{name:"Technology",tag_id:"technology"},{name:"Sports",tag_id:"sports"},{name:"Life",tag_id:"life"},{name:"Competition",tag_id:"competition"},{name:"Change",tag_id:"change"},{name:"Motivational",tag_id:"motivational"},{name:"Business",tag_id:"business"},{name:"Future",tag_id:"future"},{name:"Love",tag_id:"love"},{name:"Happiness",tag_id:"happiness"},{name:"History",tag_id:"history"},{name:"Character",tag_id:"character"},{name:"Humorous",tag_id:"humorous"},{name:"Philosophy",tag_id:"philosophy"},{name:"Politics",tag_id:"politics"},{name:"Science",tag_id:"science"},{name:"Film",tag_id:"film"},{name:"Virtue",tag_id:"virtue"},{name:"Freedom",tag_id:"freedom"},{name:"Education",tag_id:"education"},{name:"Truth",tag_id:"truth"},{name:"Religion",tag_id:"religion"},{name:"Self",tag_id:"self"},{name:"Honor",tag_id:"honor"},{name:"Self Help",tag_id:"self-help"},{name:"Faith",tag_id:"faith"},{name:"Spirituality",tag_id:"spirituality"},{name:"Social Justice",tag_id:"social-justice"},{name:"War",tag_id:"war"},{name:"Knowledge",tag_id:"knowledge"},{name:"Work",tag_id:"work"},{name:"Nature",tag_id:"nature"},{name:"Courage",tag_id:"courage"},{name:"Family",tag_id:"family"},{name:"Power Quotes",tag_id:"power-quotes"},{name:"Imagination",tag_id:"imagination"},{name:"Perseverance",tag_id:"perseverance"},{name:"Literature",tag_id:"literature"},{name:"Conservative",tag_id:"conservative"},{name:"Time",tag_id:"time"},{name:"Pain",tag_id:"pain"},{name:"Leadership",tag_id:"leadership"},{name:"Mathematics",tag_id:"mathematics"},{name:"Ethics",tag_id:"ethics"},{name:"Society",tag_id:"society"},{name:"Tolerance",tag_id:"tolerance"},{name:"Stupidity",tag_id:"stupidity"},{name:"Weakness",tag_id:"weakness"},{name:"Generosity",tag_id:"generosity"},{name:"Gratitude",tag_id:"gratitude"},{name:"Age",tag_id:"age"},{name:"Sadness",tag_id:"sadness"},{name:"Opportunity",tag_id:"opportunity"},{name:"Failure",tag_id:"failure"},{name:"Health",tag_id:"health"},{name:"Wellness",tag_id:"wellness"},{name:"Creativity",tag_id:"creativity"},{name:"Genius",tag_id:"genius"},{name:"Proverb",tag_id:"proverb"},{name:"Humor",tag_id:"humor"},{name:"Athletics",tag_id:"athletics"},{name:"god",tag_id:"god"},{name:"people",tag_id:"people"},{name:"hope",tag_id:"hope"},{name:"quotes",tag_id:"quotes"},{name:"writing",tag_id:"writing"},{name:"death",tag_id:"death"},{name:"romance",tag_id:"romance"},{name:"inspiration",tag_id:"inspiration"},{name:"change",tag_id:"change"},{name:"funny",tag_id:"funny"},{name:"world",tag_id:"world"},{name:"relationships",tag_id:"relationships"},{name:"fear",tag_id:"fear"},{name:"dreams",tag_id:"dreams"},{name:"purpose",tag_id:"purpose"},{name:"books",tag_id:"books"},{name:"art",tag_id:"art"},{name:"women",tag_id:"women"},{name:"peace",tag_id:"peace"},{name:"me",tag_id:"me"}],l="https://thequoteshub.com/api",u={THEQUOTESHUB_API_URL:l,URL_RANDOM_QUOTE:l,URL_RANDOM_BY_AUTHOR:`${l}/authors/<%AUTHOR%>`,AUTHOR_TAG:"<%AUTHOR%>"},m=window.ReactJSXRuntime,{URL_RANDOM_QUOTE:h,URL_RANDOM_BY_AUTHOR:p,AUTHOR_TAG:c}=u,_=e=>{const{clientId:d,setAttributes:l}=e,[u,_]=(0,o.useState)(""),g={value:"",label:(0,t.__)("Any Author","quote-api")};return(0,m.jsx)(n.InspectorControls,{children:(0,m.jsxs)(r.PanelBody,{title:(0,t.__)("Quote settings","quote-api"),initialOpen:!0,children:[(0,m.jsx)(r.PanelRow,{children:(0,m.jsx)(r.SelectControl,{label:(0,t.__)("Filter by Author","quote-api"),__next40pxDefaultSize:!0,options:[g,...s.map((({author_id:e,name:a})=>({value:e,label:a})))],value:g.key,onChange:e=>{_(e)}})}),(0,m.jsx)(r.PanelRow,{children:(0,m.jsx)(r.Button,{variant:"primary",label:(0,t.__)("Update data","quote-api"),onClick:()=>{fetch(u?p.replace(c,u):h).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.json()})).then((e=>{let o,r;u?e&&e.quotes&&e.quotes.length>0?(o=e.quotes[Math.floor(Math.random()*e.quotes.length)].text,r=e.author):(console.error("No quotes found for selected author or invalid response:",e),o=(0,t.__)("No quote found for this author.","quote-api"),r=u.replace(/\+/g," ")):e&&e.text&&e.author?(o=e.text,r=e.author):(console.error("Invalid response for random quote:",e),o=(0,t.__)("Could not fetch quote.","quote-api"),r=""),l({citation:r});const s=[(0,a.createBlock)("core/paragraph",{content:o})];(0,i.dispatch)(n.store).replaceInnerBlocks(d,s)})).catch((e=>{console.error("Error fetching quote data:",e),l({citation:""});const o=[(0,a.createBlock)("core/paragraph",{content:(0,t.__)("Error fetching quote.","quote-api")})];(0,i.dispatch)(n.store).replaceInnerBlocks(d,o)}))},icon:"update",iconPosition:"left",children:(0,t.__)("Get random quote","")})})]})})},g={name:"quote-api-editor",description:'A "core/quote" block variation that displays a random quote from the Quotable API',title:"Quote API Editor",scope:["block","inserter","transform"],keywords:["quote"],icon:"universal-access",attributes:{namespace:"quote-api-editor"},isActive:["namespace"]};(0,a.registerBlockVariation)("core/quote",g);const k=e=>{const{clientId:s,setAttributes:l,attributes:{tags:u}}=e,{replaceInnerBlocks:h}=(0,i.useDispatch)("core/block-editor"),p=u?(()=>{const e=d.find((e=>e.tag_id===u));return e?e.name:""})():"",[c,_]=(0,o.useState)(p),[g,k]=(0,o.useState)(p),w=d.map((e=>e.name));return(0,m.jsx)(n.InspectorControls,{children:(0,m.jsx)(r.PanelBody,{title:(0,t.__)("Quote settings","quote-api"),initialOpen:!0,children:(0,m.jsx)(r.PanelRow,{children:(0,m.jsx)(r.ComboboxControl,{label:(0,t.__)("Select a Tag","quote-api"),value:g,options:w.map((e=>({label:e,value:e}))),onChange:e=>{_(e);const i=d.find((a=>a.name===e)),t=i?i.tag_id:"",n=[(0,a.createBlock)("core/paragraph",{content:e?`This content will be replaced in the frontend with a random quote from the tag: ${e}`:"This content will be replaced in the frontend with a random quote."})];h(s,n),l({tags:t}),k(e)},onInputChange:k,placeholder:(0,t.__)("Type or select a tag","quote-api")})})})})};(0,e.addFilter)("blocks.registerBlockType","quote-api/add-attributes",(function(e){return"core/quote"!==e.name?e:{...e,attributes:{...e.attributes,namespace:{type:"string"},tags:{type:"string"}},supports:{...e.supports,__experimentalBorder:{color:!0,radius:!0,style:!0,width:!0,__experimentalDefaultControls:{color:!0,radius:!0,style:!0,width:!0}},shadow:!0}}})),(0,a.registerBlockVariation)("core/quote",g),(0,e.addFilter)("editor.BlockEdit","quote-api-editor/add-inspector-controls",(function(e){return a=>(e=>{const{attributes:{namespace:a}}=e;return a&&"quote-api-editor"===a})(a)?(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)(e,{...a}),(0,m.jsx)(_,{...a})]}):(0,m.jsx)(e,{...a})})),(0,a.registerBlockVariation)("core/quote",{name:"quote-api-frontend",description:'A "core/quote" block variation that displays a random quote from the Quotable API in the Frontend',title:"Quote API Frontend",scope:["block","inserter","transform"],icon:"universal-access-alt",keywords:["quote"],innerBlocks:[{name:"core/paragraph",attributes:{content:"This content will be replaced in the frontend with a random quote"}}],attributes:{namespace:"quote-api-frontend"},isActive:["namespace"]}),(0,e.addFilter)("editor.BlockEdit","quote-api-editor/add-inspector-controls",(function(e){return a=>(e=>{const{attributes:{namespace:a}}=e;return a&&"quote-api-frontend"===a})(a)?(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)(e,{...a}),(0,m.jsx)(k,{...a})]}):(0,m.jsx)(e,{...a})}))})();